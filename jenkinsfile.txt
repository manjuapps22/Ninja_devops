pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID="340821128217"
        AWS_DEFAULT_REGION="us-east-1" 
        IMAGE_REPO_NAME="app-repo"
        IMAGE_TAG="$BUILD_NUMBER"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
    }
   
    stages {
        
         stage('Logging into AWS ECR') {
            steps {
                script {
                sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
                }
                 
            }
        }
        
        stage('Cloning Git') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/manjuapps22/Ninja_devops.git']]])     
            }
        }
  
    // Building Docker images
    stage('Building image') {
      steps{
        script {
          dockerImage = docker.build "${IMAGE_REPO_NAME}:${IMAGE_TAG}"
        }
      }
    }
   
    // Uploading Docker images into AWS ECR
    stage('Pushing to ECR') {
     steps{  
         script {
                sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:$IMAGE_TAG"
                sh "docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
         }
        }
      }
        stage('Deploy') {
     steps{  
         sshagent(['app']) {
    // some block
                //sh "ssh ubuntu@10.0.4.48"
                //sh "ssh -t -t ubuntu@10.0.4.48 -o StrictHostKeyChecking=no"
                //sh "ifconfig"
                //sh "ssh ubuntu@10.0.4.48 && ls -la /home/ubuntu/"
                //sh "ssh -tt ubuntu@10.0.4.48 && ifconfig"
         }
        }
      } 
      stage('Deploytest'){
          steps{
              script {
                  sh "ssh ubuntu@10.0.4.48 hostname -i"
                  sh "ssh ubuntu@10.0.4.48 whoami && pwd"
                  sh "ssh ubuntu@10.0.4.48 pwd"
                  sh "ssh ubuntu@10.0.4.48 docker pull ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
                  sh "ssh ubuntu@10.0.4.48 docker rm -f test " 
                  sh "ssh ubuntu@10.0.4.48 docker run --name test -p 80:8080 -d ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"

              }
              }
          }
      }
    }
